[{"/Users/hiehn/slabs/bst-client/src/reportWebVitals.js":"1","/Users/hiehn/slabs/bst-client/src/index.js":"2","/Users/hiehn/slabs/bst-client/src/App.js":"3","/Users/hiehn/slabs/bst-client/src/Pages/BSTTree.js":"4","/Users/hiehn/slabs/bst-client/src/Pages/Color.js":"5","/Users/hiehn/slabs/bst-client/src/Pages/ColorButton.js":"6","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/index.js":"7","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/Pages/GraphUI.js":"8","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/Synths/SynthProducer.js":"9","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/reportWebVitals.js":"10","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/App.js":"11"},{"size":362,"mtime":1606502709315,"results":"12","hashOfConfig":"13"},{"size":547,"mtime":1606526932960,"results":"14","hashOfConfig":"15"},{"size":906,"mtime":1608571974370,"results":"16","hashOfConfig":"15"},{"size":3844,"mtime":1606622329752,"results":"17","hashOfConfig":"15"},{"size":1064,"mtime":1606594271845,"results":"18","hashOfConfig":"15"},{"size":605,"mtime":1606594365566,"results":"19","hashOfConfig":"15"},{"size":556,"mtime":1608831633291,"results":"20","hashOfConfig":"21"},{"size":13911,"mtime":1609129743969,"results":"22","hashOfConfig":"21"},{"size":5968,"mtime":1609034541536,"results":"23","hashOfConfig":"21"},{"size":402,"mtime":1608831633267,"results":"24","hashOfConfig":"21"},{"size":736,"mtime":1609033081977,"results":"25","hashOfConfig":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1084a8y",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1dzqar5",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"19ype9n",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},"/Users/hiehn/slabs/bst-client/src/reportWebVitals.js",[],["59","60"],"/Users/hiehn/slabs/bst-client/src/index.js",[],["61","62"],"/Users/hiehn/slabs/bst-client/src/App.js",["63","64"],"/Users/hiehn/slabs/bst-client/src/Pages/BSTTree.js",["65"],"import React from 'react';\nimport axios from 'axios';\nimport Tree from 'react-d3-tree';\n\nconst containerStyles = {\n    'width': '100%',\n    'height': '80vh',\n}\n\nexport class BSTTree extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: undefined,\n            tree: [{\n                name: '100',\n                children: []}\n                ],\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    createNewNode = (val) => {\n        return {\n            name: val.toString(),\n            children: [],\n            attributes: {\n            },\n            left: undefined,\n            right: undefined,\n        }\n    }\n\n    cloneTree = (root) => {\n        if (root == null) {\n            return null;\n        }\n\n        let newNode = this.createNewNode(root.value);\n        newNode.left = this.cloneTree(root.left);\n        let c1 = this.cloneTree(root.left);\n        let index =0;\n        if(c1) {\n            newNode.children[index] = c1\n            index++;\n        }\n        newNode.right = this.cloneTree(root.right);\n        let c2 = this.cloneTree(root.right);\n        if(c2){\n            newNode.children[index] = c2\n        }\n\n        return  newNode;\n    }\n\n    // bfTraveral = (node) => {\n    //     console.log(node)\n    //\n    //     let queue = []\n    //     queue.push(node)\n    //\n    //     while (queue.length > 0){\n    //         let curNode = queue.shift()\n    //         console.log(curNode.value)\n    //\n    //         if(curNode.left != undefined) {\n    //             queue.push(curNode.left)\n    //         }\n    //\n    //         if(curNode.right != undefined){\n    //             queue.push(curNode.right)\n    //         }\n    //    }\n    //\n    //    console.log('copyTree', this.copyTree)\n    // }\n\n\n    componentDidUpdate = async () => {\n        console.log('state was set')\n    }\n\n    componentDidMount = async () => {\n\n        const treeData = await axios.get(`http://localhost:8080/tree`);\n        let cloned = this.cloneTree(treeData.data.root)\n        let clonedTree = [JSON.parse(JSON.stringify(cloned))];\n        const dimensions = this.treeContainer.getBoundingClientRect();\n        this.setState({\n            ...this.state,\n            tree: clonedTree,\n            translate: {\n                x: dimensions.width / 2,\n                y: dimensions.height / 5,\n            }\n        });\n    }\n\n    handleChange(event) {\n        this.setState({...this.state, value: event.target.value});\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const addNodeResp = await axios.post(`http://localhost:8080/tree`, {'data': this.state.value});\n\n        const treeData = await axios.get(`http://localhost:8080/tree`);\n        let cloned = this.cloneTree(treeData.data.root)\n        let clonedTree = [JSON.parse(JSON.stringify(cloned))];\n        const dimensions = this.treeContainer.getBoundingClientRect();\n        this.setState({\n            ...this.state,\n            tree: clonedTree,\n            translate: {\n                x: dimensions.width / 2,\n                y: dimensions.height / 5,\n            }\n        });\n    }\n\n    render(){\n        return (\n            <div style={containerStyles} ref={tc => (this.treeContainer = tc)}>\n                <Tree data={this.state.tree} orientation={'vertical'} collapsible={false} translate={this.state.translate}  />\n\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        ADD NODE:\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        );\n    }\n}",["66","67"],"/Users/hiehn/slabs/bst-client/src/Pages/Color.js",[],["68","69"],"/Users/hiehn/slabs/bst-client/src/Pages/ColorButton.js",["70"],"import React from 'react';\n\nexport class ColorButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    componentDidMount = async () => {\n        //alert(this.props.color)\n    }\n\n    // handleColorChange = (color) => {\n    //     this.setState({...this.state, bgcolor: color})\n    // }\n\n    render(){\n        let color = {'background-color': this.state.bgcolor, 'height': '100vh',}\n        return  (<button onClick={() => { this.props.handleColorChange(this.props.color) }}>\n            {this.props.color}\n            </button>);\n    }\n}","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/index.js",[],["71","72"],"/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/Pages/GraphUI.js",[],"/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/Synths/SynthProducer.js",["73","74","75"],"import * as Tone from \"tone\";\n\nexport default class SynthProducer {\n    getRandomBassSynth() {\n        const numOfSynths = 4;\n        let bassSynth;\n        const selection = Math.floor(Math.random() * numOfSynths);\n        // console.log(\"BASS-SYNTH\", selection)\n        switch (selection) {\n            //     switch (3) {\n            case 0:\n                bassSynth = new Tone.AMSynth();\n                bassSynth.toDestination();\n                bassSynth.volume.value = -8;\n\n                return bassSynth;\n            case 1:\n                bassSynth = new Tone.FMSynth();\n                bassSynth.toDestination();\n                bassSynth.volume.value = -15;\n\n                return bassSynth;\n            case 2:\n                bassSynth = new Tone.MonoSynth();\n                bassSynth.toDestination();\n                bassSynth.volume.value = -25;\n\n                return bassSynth;\n            case 3:\n                bassSynth = new Tone.Synth();\n                bassSynth.toDestination();\n                bassSynth.volume.value = -10;\n\n                return bassSynth;\n        }\n    }\n\n    getRandomChordSynth() {\n        const numOfSynths = 3;\n        let chordSynth;\n        const selection = Math.floor(Math.random() * numOfSynths);\n        // console.log(\"CHORD-SYNTH\", selection)\n        switch (selection) {\n            // switch (2) {\n            case 0:\n                chordSynth = new Tone.AMSynth().toDestination();\n                chordSynth.volume.value = -30;\n\n                const tremolo = new Tone.Tremolo(4, 0.75).toDestination().start();\n                const phaser = new Tone.Phaser({\n                    \"frequency\": 6,\n                    \"octaves\": 5,\n                    \"baseFrequency\": 1000\n                }).toDestination();\n                const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();\n                const pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toDestination();\n\n                chordSynth.chain(pingPong, autoWah, phaser, tremolo);\n                return chordSynth;\n            case 1:\n                chordSynth = new Tone.PolySynth().toDestination();\n                chordSynth.volume.value = -20;\n\n                const autoFilter = new Tone.AutoFilter(\"4n\").toDestination().start();\n                const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n\n                chordSynth.chain(autoFilter, feedbackDelay);\n                return chordSynth;\n            case 2:\n                chordSynth = new Tone.PolySynth().toDestination();\n                chordSynth.volume.value = -40;\n\n                const chorus = new Tone.Chorus(4, 2.5, 0.5);\n                const reverb = new Tone.JCReverb(0.7).toDestination();\n\n                chordSynth.chain(chorus, reverb);\n                return chordSynth;\n        }\n    }\n\n    getRandomTrebleSynth() {\n        const numOfSynths = 4;\n        let chordSynth;\n        const selection = Math.floor(Math.random() * numOfSynths);\n        // console.log(\"TREBLE-SYNTH\", selection)\n        switch (selection) {\n        // switch (2) {\n            case 0:\n                chordSynth = new Tone.AMSynth().toDestination();\n                chordSynth.volume.value = -30;\n\n                const tremolo = new Tone.Tremolo(4, 0.75).toDestination().start();\n                const phaser = new Tone.Phaser({\n                    \"frequency\": 6,\n                    \"octaves\": 5,\n                    \"baseFrequency\": 1000\n                }).toDestination();\n                const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();\n                const pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toDestination();\n\n                chordSynth.chain(pingPong, autoWah, phaser, tremolo);\n\n                return chordSynth;\n            case 1:\n                chordSynth = new Tone.PolySynth().toDestination();\n                chordSynth.volume.value = -30;\n\n                const autoFilter = new Tone.AutoFilter(\"4n\").toDestination().start();\n                // const cheby = new Tone.Chebyshev(50).toDestination();\n                const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n\n                chordSynth.chain(autoFilter, feedbackDelay);\n\n                return chordSynth;\n            case 2:\n                chordSynth = new Tone.MonoSynth().toDestination();\n                chordSynth.volume.value = -40;\n\n                //const autoFilter = new Tone.AutoFilter(\"4n\").toDestination().start();\n                // const cheby = new Tone.Chebyshev(50).toDestination();\n                // const chorus = new Tone.Chorus(4, 2.5, 0.5);\n                const reverb = new Tone.JCReverb(0.8).toDestination();\n                //const shift = new Tone.FrequencyShifter(42).toDestination();\n                // const autoWah1 = new Tone.AutoWah(50, 6, -30).toDestination();\n                const pingPong1 = new Tone.PingPongDelay(\"4n\", 0.1).toDestination();\n\n                chordSynth.chain(pingPong1, reverb);\n\n                return chordSynth;\n            case 3:\n                chordSynth = new Tone.MembraneSynth().toDestination();\n                chordSynth.volume.value = -50;\n\n                //const autoFilter = new Tone.AutoFilter(\"4n\").toDestination().start();\n                // const cheby = new Tone.Chebyshev(50).toDestination();\n                // const chorus = new Tone.Chorus(4, 2.5, 0.5);\n                const reverb1 = new Tone.JCReverb(0.8).toDestination();\n                //const shift = new Tone.FrequencyShifter(42).toDestination();\n                // const autoWah1 = new Tone.AutoWah(50, 6, -30).toDestination();\n                // const pingPong2 = new Tone.PingPongDelay(\"4n\", 0.1).toDestination();\n                // const feedbackDelay1 = new Tone.FeedbackDelay(\"1m\", 0.1).toDestination();\n                // const tremol1 = new Tone.Tremolo(4, 0.75).toDestination().start();\n                chordSynth.chain(reverb1);\n\n                return chordSynth;\n        }\n    }\n}\n","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/reportWebVitals.js",[],["76","77"],"/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/App.js",["78","79"],"import './App.css';\nimport {Route, BrowserRouter as Router, Link} from \"react-router-dom\";\nimport {GraphUI} from './Pages/GraphUI'\nimport ListGroup from 'react-bootstrap/ListGroup'\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                {/*<ListGroup horizontal>*/}\n                {/*    <ListGroup.Item><Link to=\"/\">HOME</Link></ListGroup.Item>*/}\n                {/*    <ListGroup.Item><Link to=\"/tree\">GRAPH</Link></ListGroup.Item>*/}\n                {/*    <ListGroup.Item><Link to=\"/color\">COLORS</Link></ListGroup.Item>*/}\n                {/*</ListGroup>*/}\n\n                <Route path=\"/\" exact component={GraphUI}/>\n            </div>\n\n        </Router>\n    );\n}\n\nexport default App;\n",["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":41,"nodeType":"90","messageId":"91","endLine":2,"endColumn":45},{"ruleId":"88","severity":1,"message":"92","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":17},{"ruleId":"88","severity":1,"message":"93","line":108,"column":15,"nodeType":"90","messageId":"91","endLine":108,"endColumn":26},{"ruleId":"82","replacedBy":"94"},{"ruleId":"84","replacedBy":"95"},{"ruleId":"82","replacedBy":"96"},{"ruleId":"84","replacedBy":"97"},{"ruleId":"88","severity":1,"message":"98","line":20,"column":13,"nodeType":"90","messageId":"91","endLine":20,"endColumn":18},{"ruleId":"82","replacedBy":"99"},{"ruleId":"84","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":9,"column":9,"nodeType":"103","messageId":"104","endLine":35,"endColumn":10},{"ruleId":"101","severity":1,"message":"102","line":43,"column":9,"nodeType":"103","messageId":"104","endLine":78,"endColumn":10},{"ruleId":"101","severity":1,"message":"102","line":86,"column":9,"nodeType":"103","messageId":"104","endLine":146,"endColumn":10},{"ruleId":"82","replacedBy":"105"},{"ruleId":"84","replacedBy":"106"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":41,"nodeType":"90","messageId":"91","endLine":2,"endColumn":45},{"ruleId":"88","severity":1,"message":"92","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":17},{"ruleId":"82","replacedBy":"107"},{"ruleId":"84","replacedBy":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","'addNodeResp' is assigned a value but never used.",["109"],["110"],["109"],["110"],"'color' is assigned a value but never used.",["109"],["110"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["109"],["110"],["109"],["110"],"no-global-assign","no-unsafe-negation"]