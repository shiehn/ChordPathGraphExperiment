[{"/Users/hiehn/slabs/bst-client/src/reportWebVitals.js":"1","/Users/hiehn/slabs/bst-client/src/index.js":"2","/Users/hiehn/slabs/bst-client/src/App.js":"3","/Users/hiehn/slabs/bst-client/src/Pages/BSTTree.js":"4","/Users/hiehn/slabs/bst-client/src/Pages/Color.js":"5","/Users/hiehn/slabs/bst-client/src/Pages/ColorButton.js":"6","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/index.js":"7","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/Pages/GraphUI.js":"8","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/Pages/ColorButton.js":"9","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/Pages/BSTTree.js":"10","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/Pages/Color.js":"11"},{"size":362,"mtime":1606502709315,"results":"12","hashOfConfig":"13"},{"size":547,"mtime":1606526932960,"results":"14","hashOfConfig":"15"},{"size":906,"mtime":1608571974370,"results":"16","hashOfConfig":"15"},{"size":3844,"mtime":1606622329752,"results":"17","hashOfConfig":"15"},{"size":1064,"mtime":1606594271845,"results":"18","hashOfConfig":"15"},{"size":605,"mtime":1606594365566,"results":"19","hashOfConfig":"15"},{"size":556,"mtime":1608831633291,"results":"20","hashOfConfig":"21"},{"size":9733,"mtime":1609008204759,"results":"22","hashOfConfig":"21"},{"size":613,"mtime":1608831633278,"results":"23","hashOfConfig":"21"},{"size":3857,"mtime":1608831633287,"results":"24","hashOfConfig":"21"},{"size":1064,"mtime":1606594271845,"results":"25","hashOfConfig":"21"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1084a8y",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1dzqar5",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"19ype9n",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/hiehn/slabs/bst-client/src/reportWebVitals.js",[],["57","58"],"/Users/hiehn/slabs/bst-client/src/index.js",[],["59","60"],"/Users/hiehn/slabs/bst-client/src/App.js",["61","62"],"/Users/hiehn/slabs/bst-client/src/Pages/BSTTree.js",["63"],"import React from 'react';\nimport axios from 'axios';\nimport Tree from 'react-d3-tree';\n\nconst containerStyles = {\n    'width': '100%',\n    'height': '80vh',\n}\n\nexport class BSTTree extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: undefined,\n            tree: [{\n                name: '100',\n                children: []}\n                ],\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    createNewNode = (val) => {\n        return {\n            name: val.toString(),\n            children: [],\n            attributes: {\n            },\n            left: undefined,\n            right: undefined,\n        }\n    }\n\n    cloneTree = (root) => {\n        if (root == null) {\n            return null;\n        }\n\n        let newNode = this.createNewNode(root.value);\n        newNode.left = this.cloneTree(root.left);\n        let c1 = this.cloneTree(root.left);\n        let index =0;\n        if(c1) {\n            newNode.children[index] = c1\n            index++;\n        }\n        newNode.right = this.cloneTree(root.right);\n        let c2 = this.cloneTree(root.right);\n        if(c2){\n            newNode.children[index] = c2\n        }\n\n        return  newNode;\n    }\n\n    // bfTraveral = (node) => {\n    //     console.log(node)\n    //\n    //     let queue = []\n    //     queue.push(node)\n    //\n    //     while (queue.length > 0){\n    //         let curNode = queue.shift()\n    //         console.log(curNode.value)\n    //\n    //         if(curNode.left != undefined) {\n    //             queue.push(curNode.left)\n    //         }\n    //\n    //         if(curNode.right != undefined){\n    //             queue.push(curNode.right)\n    //         }\n    //    }\n    //\n    //    console.log('copyTree', this.copyTree)\n    // }\n\n\n    componentDidUpdate = async () => {\n        console.log('state was set')\n    }\n\n    componentDidMount = async () => {\n\n        const treeData = await axios.get(`http://localhost:8080/tree`);\n        let cloned = this.cloneTree(treeData.data.root)\n        let clonedTree = [JSON.parse(JSON.stringify(cloned))];\n        const dimensions = this.treeContainer.getBoundingClientRect();\n        this.setState({\n            ...this.state,\n            tree: clonedTree,\n            translate: {\n                x: dimensions.width / 2,\n                y: dimensions.height / 5,\n            }\n        });\n    }\n\n    handleChange(event) {\n        this.setState({...this.state, value: event.target.value});\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n        const addNodeResp = await axios.post(`http://localhost:8080/tree`, {'data': this.state.value});\n\n        const treeData = await axios.get(`http://localhost:8080/tree`);\n        let cloned = this.cloneTree(treeData.data.root)\n        let clonedTree = [JSON.parse(JSON.stringify(cloned))];\n        const dimensions = this.treeContainer.getBoundingClientRect();\n        this.setState({\n            ...this.state,\n            tree: clonedTree,\n            translate: {\n                x: dimensions.width / 2,\n                y: dimensions.height / 5,\n            }\n        });\n    }\n\n    render(){\n        return (\n            <div style={containerStyles} ref={tc => (this.treeContainer = tc)}>\n                <Tree data={this.state.tree} orientation={'vertical'} collapsible={false} translate={this.state.translate}  />\n\n                <form onSubmit={this.handleSubmit}>\n                    <label>\n                        ADD NODE:\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                </form>\n            </div>\n        );\n    }\n}",["64","65"],"/Users/hiehn/slabs/bst-client/src/Pages/Color.js",[],["66","67"],"/Users/hiehn/slabs/bst-client/src/Pages/ColorButton.js",["68"],"import React from 'react';\n\nexport class ColorButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    componentDidMount = async () => {\n        //alert(this.props.color)\n    }\n\n    // handleColorChange = (color) => {\n    //     this.setState({...this.state, bgcolor: color})\n    // }\n\n    render(){\n        let color = {'background-color': this.state.bgcolor, 'height': '100vh',}\n        return  (<button onClick={() => { this.props.handleColorChange(this.props.color) }}>\n            {this.props.color}\n            </button>);\n    }\n}","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/index.js",[],["69","70"],"/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/Pages/GraphUI.js",[],"/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/Pages/ColorButton.js",["71"],"import React from 'react';\n\nexport class ColorButton extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount = async () => {\n        //alert(this.props.color)\n    }\n\n    // handleColorChange = (color) => {\n    //     this.setState({...this.state, bgcolor: color})\n    // }\n\n    render() {\n        let color = {'background-color': this.state.bgcolor, 'height': '100vh',}\n        return (<button onClick={() => {\n            this.props.handleColorChange(this.props.color)\n        }}>\n            {this.props.color}\n        </button>);\n    }\n}\n","/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/Pages/BSTTree.js",["72"],"/Users/hiehn/TrebleMakerKeyPath/keypath-client/src/Pages/Color.js",[],["73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":2,"column":41,"nodeType":"83","messageId":"84","endLine":2,"endColumn":45},{"ruleId":"81","severity":1,"message":"85","line":5,"column":8,"nodeType":"83","messageId":"84","endLine":5,"endColumn":17},{"ruleId":"81","severity":1,"message":"86","line":108,"column":15,"nodeType":"83","messageId":"84","endLine":108,"endColumn":26},{"ruleId":"75","replacedBy":"87"},{"ruleId":"77","replacedBy":"88"},{"ruleId":"75","replacedBy":"89"},{"ruleId":"77","replacedBy":"90"},{"ruleId":"81","severity":1,"message":"91","line":20,"column":13,"nodeType":"83","messageId":"84","endLine":20,"endColumn":18},{"ruleId":"75","replacedBy":"92"},{"ruleId":"77","replacedBy":"93"},{"ruleId":"81","severity":1,"message":"91","line":19,"column":13,"nodeType":"83","messageId":"84","endLine":19,"endColumn":18},{"ruleId":"81","severity":1,"message":"86","line":108,"column":15,"nodeType":"83","messageId":"84","endLine":108,"endColumn":26},{"ruleId":"75","replacedBy":"94"},{"ruleId":"77","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],["96"],["97"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","'addNodeResp' is assigned a value but never used.",["96"],["97"],["96"],["97"],"'color' is assigned a value but never used.",["96"],["97"],["96"],["97"],"no-global-assign","no-unsafe-negation"]